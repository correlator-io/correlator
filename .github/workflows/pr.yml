name: PR

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  GO_VERSION: '1.25.0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Check Go formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            echo "Run 'make fmt' to fix formatting issues"
            exit 1
          fi

      - name: Run go vet
        run: make vet

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v1.59.1
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ lint ]
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_TEST_PASSWORD }}
          POSTGRES_USER: correlator_test
          POSTGRES_DB: correlator_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run unit tests
        run: make test-unit
        env:
          CGO_ENABLED: 1

      - name: Run integration tests
        run: make test-integration
        env:
          CGO_ENABLED: 1
          DATABASE_URL: postgres://correlator_test:${{ secrets.POSTGRES_TEST_PASSWORD }}@localhost:5432/correlator_test?sslmode=disable

